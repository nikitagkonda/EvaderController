#include "ros/ros.h"
#include "std_msgs/String.h"
#include "sensor_msgs/LaserScan.h"
#include "geometry_msgs/Twist.h"
ros::Publisher vel_pub;
void sensorCallback(sensor_msgs::LaserScan msg)
{
	int i,flag=0;
	for(i=0;i<=sizeof(msg.ranges);i++)
	{
  		if(msg.ranges[i]<=2.0)
		{
		flag=1;
		break;
		}		
    		
	}
	if(flag==1) {
	ROS_INFO("I hit the obstacle");
        //turn and check
        geometry_msgs::Twist msg1;
	msg1.angular.z=2.8;
	for(i=0;i<=20;i++)
        	vel_pub.publish(msg1);
	return;
	
       }
	
	else{
 	geometry_msgs::Twist msg2;
	msg2.linear.x=2.0;
        vel_pub.publish(msg2);
	}
    
}

int main(int argc, char **argv)
{
	ros::init(argc, argv, "sensorlistener");

	ros::NodeHandle n;
	
	vel_pub = n.advertise<geometry_msgs::Twist>("cmd_vel", 10);

	ros::Subscriber sub1 = n.subscribe<sensor_msgs::LaserScan>("base_scan", 10, sensorCallback);

	ros::spin();

	return 0;
}
